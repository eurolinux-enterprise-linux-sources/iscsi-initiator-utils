From 5504053cc08df38d8d85032fa1691e363dfcfb92 Mon Sep 17 00:00:00 2001
From: Lee Duncan <lduncan@suse.com>
Date: Fri, 15 Dec 2017 11:13:29 -0800
Subject: [PATCH] Do not double-close IPC file stream to iscsid

A double-close of a file descriptor and its associated FILE stream
can be an issue in multi-threaded cases. Found by Qualsys.
---
 iscsiuio/src/unix/iscsid_ipc.c | 9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/iscsiuio/src/unix/iscsid_ipc.c b/iscsiuio/src/unix/iscsid_ipc.c
index c3b10e03774a..4a6687b32a17 100644
--- a/iscsiuio/src/unix/iscsid_ipc.c
+++ b/iscsiuio/src/unix/iscsid_ipc.c
@@ -908,6 +908,9 @@ early_exit:
 /**
  *  process_iscsid_broadcast() - This function is used to process the
  *                               broadcast messages from iscsid
+ *
+ *                               s2 is an open file descriptor, which
+ *                               must not be left open upon return
  */
 int process_iscsid_broadcast(int s2)
 {
@@ -923,6 +926,7 @@ int process_iscsid_broadcast(int s2)
 	if (fd == NULL) {
 		LOG_ERR(PFX "Couldn't open file descriptor: %d(%s)",
 			errno, strerror(errno));
+		close(s2);
 		return -EIO;
 	}
 
@@ -1025,7 +1029,8 @@ int process_iscsid_broadcast(int s2)
 	}
 
 error:
-	free(data);
+	if (data)
+		free(data);
 	fclose(fd);
 
 	return rc;
@@ -1127,8 +1132,8 @@ static void *iscsid_loop(void *arg)
 			break;
 		}
 
+		/* this closes the file descriptor s2 */
 		process_iscsid_broadcast(s2);
-		close(s2);
 	}
 
 	pthread_cleanup_pop(0);
-- 
2.17.2

